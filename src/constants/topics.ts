export const TOPICS = {
  array: "ARRAY",
  string: "STRING",
  hash_table: "HASH_TABLE",
  dynamic_programming: "DYNAMIC_PROGRAMMING",
  math: "MATH",
  sorting: "SORTING",
  greedy: "GREEDY",
  depth_first_search: "DEPTH_FIRST_SEARCH",
  binary_search: "BINARY_SEARCH",
  database: "DATABASE",
  matrix: "MATRIX",
  tree: "TREE",
  breadth_first_search: "BREADTH_FIRST_SEARCH",
  bit_manipulation: "BIT_MANIPULATION",
  two_pointers: "TWO_POINTERS",
  prefix_sum: "PREFIX_SUM",
  heap_priority_queue: "HEAP_PRIORITY_QUEUE",
  simulation: "SIMULATION",
  binary_tree: "BINARY_TREE",
  stack: "STACK",
  graph: "GRAPH",
  counting: "COUNTING",
  sliding_window: "SLIDING_WINDOW",
  design: "DESIGN",
  enumeration: "ENUMERATION",
  backtracking: "BACKTRACKING",
  union_find: "UNION_FIND",
  linked_list: "LINKED_LIST",
  number_theory: "NUMBER_THEORY",
  ordered_set: "ORDERED_SET",
  monotonic_stack: "MONOTONIC_STACK",
  segment_tree: "SEGMENT_TREE",
  trie: "TRIE",
  combinatorics: "COMBINATORICS",
  bitmask: "BITMASK",
  recursion: "RECURSION",
  queue: "QUEUE",
  divide_and_conquer: "DIVIDE_AND_CONQUER",
  binary_indexed_tree: "BINARY_INDEXED_TREE",
  memoization: "MEMOIZATION",
  binary_search_tree: "BINARY_SEARCH_TREE",
  geometry: "GEOMETRY",
  hash_function: "HASH_FUNCTION",
  string_matching: "STRING_MATCHING",
  topological_sort: "TOPOLOGICAL_SORT",
  shortest_path: "SHORTEST_PATH",
  rolling_hash: "ROLLING_HASH",
  game_theory: "GAME_THEORY",
  interactive: "INTERACTIVE",
  data_stream: "DATA_STREAM",
  monotonic_queue: "MONOTONIC_QUEUE",
  brainteaser: "BRAINTEASER",
  doubly_linked_list: "DOUBLY_LINKED_LIST",
  merge_sort: "MERGE_SORT",
  randomized: "RANDOMIZED",
  counting_sort: "COUNTING_SORT",
  iterator: "ITERATOR",
  concurrency: "CONCURRENCY",
  quickselect: "QUICKSELECT",
  line_sweep: "LINE_SWEEP",
  probability_and_statistics: "PROBABILITY_AND_STATISTICS",
  suffix_array: "SUFFIX_ARRAY",
  bucket_sort: "BUCKET_SORT",
  minimum_spanning_tree: "MINIMUM_SPANNING_TREE",
  shell: "SHELL",
  reservoir_sampling: "RESERVOIR_SAMPLING",
  radix_sort: "RADIX_SORT",
  eulerian_circuit: "EULERIAN_CIRCUIT",
  strongly_connected_component: "STRONGLY_CONNECTED_COMPONENT",
  rejection_sampling: "REJECTION_SAMPLING",
  biconnected_component: "BICONNECTED_COMPONENT",
};

export type Topic = keyof typeof TOPICS;

export const READABLE_TOPICS: Record<string, string> = {
  ARRAY: "Array",
  STRING: "String",
  HASH_TABLE: "Hash Table",
  DYNAMIC_PROGRAMMING: "Dynamic Programming",
  MATH: "Math",
  SORTING: "Sorting",
  GREEDY: "Greedy",
  DEPTH_FIRST_SEARCH: "Depth First Search",
  BINARY_SEARCH: "Binary Search",
  DATABASE: "Database",
  MATRIX: "Matrix",
  TREE: "Tree",
  BREADTH_FIRST_SEARCH: "Breadth First Search",
  BIT_MANIPULATION: "Bit Manipulation",
  TWO_POINTERS: "Two Pointers",
  PREFIX_SUM: "Prefix Sum",
  HEAP_PRIORITY_QUEUE: "Heap / Priority Queue",
  SIMULATION: "Simulation",
  BINARY_TREE: "Binary Tree",
  STACK: "Stack",
  GRAPH: "Graph",
  COUNTING: "Counting",
  SLIDING_WINDOW: "Sliding Window",
  DESIGN: "Design",
  ENUMERATION: "Enumeration",
  BACKTRACKING: "Backtracking",
  UNION_FIND: "Union Find",
  LINKED_LIST: "Linked List",
  NUMBER_THEORY: "Number Theory",
  ORDERED_SET: "Ordered Set",
  MONOTONIC_STACK: "Monotonic Stack",
  SEGMENT_TREE: "Segment Tree",
  TRIE: "Trie",
  COMBINATORICS: "Combinatorics",
  BITMASK: "Bitmask",
  RECURSION: "Recursion",
  QUEUE: "Queue",
  DIVIDE_AND_CONQUER: "Divide and Conquer",
  BINARY_INDEXED_TREE: "Binary Indexed Tree",
  MEMOIZATION: "Memoization",
  BINARY_SEARCH_TREE: "Binary Search Tree",
  GEOMETRY: "Geometry",
  HASH_FUNCTION: "Hash Function",
  STRING_MATCHING: "String Matching",
  TOPOLOGICAL_SORT: "Topological Sort",
  SHORTEST_PATH: "Shortest Path",
  ROLLING_HASH: "Rolling Hash",
  GAME_THEORY: "Game Theory",
  INTERACTIVE: "Interactive",
  DATA_STREAM: "Data Stream",
  MONOTONIC_QUEUE: "Monotonic Queue",
  BRAINTEASER: "Brainteaser",
  DOUBLY_LINKED_LIST: "Doubly Linked List",
  MERGE_SORT: "Merge Sort",
  RANDOMIZED: "Randomized",
  COUNTING_SORT: "Counting Sort",
  ITERATOR: "Iterator",
  CONCURRENCY: "Concurrency",
  QUICKSELECT: "Quickselect",
  LINE_SWEEP: "Line Sweep",
  PROBABILITY_AND_STATISTICS: "Probability and Statistics",
  SUFFIX_ARRAY: "Suffix Array",
  BUCKET_SORT: "Bucket Sort",
  MINIMUM_SPANNING_TREE: "Minimum Spanning Tree",
  SHELL: "Shell",
  RESERVOIR_SAMPLING: "Reservoir Sampling",
  RADIX_SORT: "Radix Sort",
  EULERIAN_CIRCUIT: "Eulerian Circuit",
  STRONGLY_CONNECTED_COMPONENT: "Strongly Connected Component",
  REJECTION_SAMPLING: "Rejection Sampling",
  BICONNECTED_COMPONENT: "Biconnected Component",
};

export interface TopicInfo {
  id: string;
  db: string;
  readable: string;
}

export const TOPIC_LIST: TopicInfo[] = Object.entries(TOPICS).map(
  ([id, db]) => ({
    id,
    db,
    readable: READABLE_TOPICS[db] ?? db,
  })
);
